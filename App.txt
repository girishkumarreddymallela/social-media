import React, { useState } from 'react';
import './App.css';
import axios from 'axios'; // Import Axios

function App() {
  const [name, setName] = useState('');
  const [password, setPassword] = useState('');

  const handleChange = (e) => {
    setName(e.target.value);
    
  };
  const handleChange2 = (e) => {
    
    setPassword(e.target.value);
  };

  const addUser = async (event) => {

    event.preventDefault(); 
    if (name.trim() !== '' && password.trim() !== ""){
    const config = {
      method: 'post',
      url: 'http://localhost:5000/api/add',
      data: {name, password} ,
      headers: {
        'Content-Type':  'application/json',
      },
    };
    try {
       const response = await axios(config);
       console.log(response.data.message);
       
       setName('');
     
    } catch (error) {
      console.error('Error adding user:', error);
      // You can add error handling logic here, e.g., show an error message to the user.
    } }
    else{
      console.log("enter some name man")
    }
  };
    
  return (
    <div className="App">
      <h1>MERN Stack Simple App</h1>
      <form>
      <input
        type="text"
        placeholder="Enter Name"
        value={name}
        onChange={handleChange} 
      />
      <input
        type="text"
        placeholder="Password"
        value={password}
        onChange={handleChange2} 
      />
      <button type="submit" onClick={(event) => addUser(event)}>Add User</button>

      </form>
    </div>
  );
}

export default App;
---------------------------------------------------------------------------------------------------------------
index.js
----------
// server.js
const express = require('express');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');
const app = express();
const port = process.env.PORT || 5000;
const Mongo_uri=process.env.MONGO_URL
const cors = require('cors'); // Import the cors package

//-------------------------------------------------------
const corsOptions = {
  origin: 'http://localhost:3000', // Replace with the actual origin of your frontend
  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
  preflightContinue: false,
  optionsSuccessStatus: 204,
  credentials: true,
};

app.use(cors(corsOptions));


// MongoDB Atlas connection
mongoose.connect('mongodb+srv://girish:1a9701221314@cluster0.ykap1v2.mongodb.net/?retryWrites=true&w=majority', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

app.use(bodyParser.json());

// Import your API routes
const apiRoutes = require('./routes/api');

// Set up API routes
app.use('/api', apiRoutes);

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});


--------------------------------------------------------------------------------------------------------------
routes/api.js-
----------------
// routes/api.js
const express = require('express');
const router = express.Router();
const User = require('../models/User');
//---------------------------------------------------

// Handle preflight requests
router.options('*', (req, res) => {
  res.header('Access-Control-Allow-Origin', corsOptions.origin);
  res.header('Access-Control-Allow-Methods', corsOptions.methods);
  res.header('Access-Control-Allow-Headers', 'Content-Type');
  res.header('Access-Control-Max-Age', 86400);
  res.sendStatus(204);
});


// Route to add a user to the database
router.post('/add', async (req, res) => {
  try {
    const user = new User({ name: req.body.name , password: req.body.password});
    await user.save();
    res.json({ message: 'User added successfully' });
  } catch (error) {
    res.status(500).json({ error: 'Something went wrong' });
  }
});



module.exports = router;
--------------------------------------------------------------------------------------------------------
models/User.js
---------------
// models/User.js
const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  name: String,
  password:String,
});

module.exports = mongoose.model('user', userSchema);